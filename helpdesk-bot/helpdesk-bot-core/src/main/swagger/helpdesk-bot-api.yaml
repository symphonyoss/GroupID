swagger: '2.0'
info:
  version: '0.0.1'
  title: Help Desk Bot
  description:
produces:
  - application/json
tags:
  - Service
schemes:
  - http
  - https
basePath: '/'
paths:
  /v1/ticket/{ticketId}/accept:
    post:
      summary: Notify the help desk bot that a ticket has been accepted by an agent.
      operationId: acceptTicket
      parameters:
        - name: ticketId
          in: path
          required: true
          type: string
        - name: agentId
          in: query
          required: true
          type: integer
          format: int64
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TicketResponse'
        '400':
          description: BAD REQUEST |
            Ticket Id could not be found.
            Agent Id could not be found.
            Required parameter was not provided.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: INTERNAL SERVER ERROR
          schema:
            $ref: '#/definitions/Error'

      tags:
        - Ticket
  /v1/ticket/{ticketId}/join:
    post:
      summary: Join the conversation that already exists.
      operationId: joinConversation
      parameters:
        - name: ticketId
          in: path
          required: true
          type: string
        - name: agentId
          in: query
          required: true
          type: integer
          format: int64
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TicketResponse'
        '400':
          description: BAD REQUEST |
            Ticket Id could not be found.
            Agent Id could not be found.
            Required parameter was not provided.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: INTERNAL SERVER ERROR
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Ticket
  /v1/makerchecker/{makerCheckerId}/approve:
    post:
      summary: Notify the help desk bot that a message has been accepted for sending by another agent.
      operationId: approveMakerCheckerMessage
      parameters:
        - name: makerCheckerId
          in: path
          required: true
          type: string
        - name: userId
          in: query
          required: true
          type: integer
          format: int64
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MakerCheckerResponse'
        '400':
          description: BAD REQUEST |
            Invalid stream id.
            Invald group id.
            Invalid proxy to stream id.
            Message Id could not be found at message timestamp.
            Required parameter was not provided.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: INTERNAL SERVER ERROR
          schema:
            $ref: '#/definitions/Error'
      tags:
        - MakerChecker
  /v1/makerchecker/{makerCheckerId}/deny:
    post:
      summary: Notify the help desk bot that a message has been denied for sending by another agent.
      operationId: denyMakerCheckerMessage
      parameters:
        - name: makerCheckerId
          in: path
          required: true
          type: string
        - name: userId
          in: query
          required: true
          type: integer
          format: int64
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MakerCheckerResponse'
        '400':
          description: BAD REQUEST |
            Invalid stream id.
            Invald group id.
            Invalid proxy to stream id.
            Message Id could not be found at message timestamp.
            Required parameter was not provided.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: INTERNAL SERVER ERROR
          schema:
            $ref: '#/definitions/Error'
      tags:
        - MakerChecker
definitions:
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  TicketResponse:
    type: object
    properties:
      message:
        type: string
      ticketId:
        type: string
      state:
        type: string
        description: |
          Accepted states - UNSERVICED, UNRESOLVED, RESOLVED
      user:
        $ref: '#/definitions/User'
  MakerCheckerResponse:
    type: object
    properties:
      message:
        type: string
      user:
        $ref: '#/definitions/User'
      state:
        type: string
        description: |
          Accepted states - APPROVED, DENIED, OPENED
  User:
    type: object
    properties:
      userId:
        type: integer
        format: int64
      displayName:
        type: string